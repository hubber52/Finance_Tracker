import React, { useState, useContext } from 'react';
import { APIContext } from '../Contexts/APIContext';
import axios from 'axios';
import BudgetNavigation from '../Components/BudgetNavigation';
import Navigation from '../Components/Navigation';

import '../Styles/Pages/crudCreate.css'

type Expense = {
    id?: number, //Primary Key Generated by Backend
    username?: string,
    expense_name?: string,
    user?: string,  //Current User
    expense_category: string,
    expense_amount ?: number,
    expense_notes ?: string,
    expense_rate ?: number,
    expense_date?: string,
}


function ExpensesCreate(){
    /*
    const [expense_name, setExpense_name] = useState('');
    const [expense_category, setExpense_category] = useState('');
    const [expense_amount, setExpense_amount] = useState(0);
    const [expense_notes, setExpense_notes] = useState('');
    const [expense_rate, setExpense_rate] = useState(0);
    */
    const token = localStorage.getItem('access_token');
    const url = useContext(APIContext);
    const [createform, setCreateForm] = useState({
        expense_name : '',
        expense_category : 'Essential',
        expense_amount : 0,
        expense_notes : '',
        expense_rate : "Weekly",
    });

    const handleChange = (event : any) => {
      const { name, value } = event.target; // Destructure name and value from the event target
      setCreateForm(prevFormData => ({
        ...prevFormData, // Spread the previous state to maintain other field values
        [name]: value,   // Update the specific field using its name as a dynamic key
      }));
    };

    function expensePost(formData : any){
        formData.preventDefault();
        axios.post(url + 'expense/create',{
                expense_name : createform.expense_name,
                expense_category : createform.expense_category,
                expense_amount : createform.expense_amount,
                expense_notes : createform.expense_notes,
                expense_rate : createform.expense_rate,
            },
            {headers: { Authorization: `Bearer ${token}` }
        })
        .then(function(response){
            console.log('Response:', response.data);
            if (!window.confirm('Entry Added')) return;
        })
        .catch(function(response){
            console.log("Failed To Create");
        })
    };

    return(
        <div>
            <Navigation />
            <div className="mainContent"> 
            <BudgetNavigation />
             <form className = "crudForm" onSubmit={expensePost}>
                <label>
                Name
                <input
                    type="text"
                    name="expense_name"
                    value={createform.expense_name}
                    onChange={handleChange}
                />
                </label>
                <label>
                Category
                    <select name="expense_category" value={createform.expense_category} onChange={handleChange}>
                        <option value="Essential"> Essential </option>
                        <option value="Discretionary"> Discretionary </option>
                    </select>
                </label>
                <label>
                Amount
                <input
                    type="number"
                    name="expense_amount"
                    value={createform.expense_amount}
                    onChange={handleChange}
                />
                </label>
                <label>
                Notes
                <input
                    type="text"
                    name="expense_notes"
                    value={createform.expense_notes}
                    onChange={handleChange}
                />
                </label>
                <label>
                Rate
                <select name="expense_rate" value={createform.expense_rate} onChange={handleChange}> 
                    <option value="Weekly"> Weekly </option>
                    <option value="Monthly"> Monthly</option>
                    <option value="Annually"> Annually </option>
                </select>
                </label>
                <button className = "crudFormSubmitButton" type="submit">Submit</button>
           </form>
           </div>
        </div>
    );



}

export default ExpensesCreate;