import { useState, useContext } from 'react';
import { APIContext } from '../Contexts/APIContext';
import axios from 'axios';
import BudgetNavigation from '../Components/BudgetNavigation';
import Navigation from '../Components/Navigation';

import '../Styles/Pages/crudCreate.css';

type Income = {
    id?: number, //Primary Key Generated by Backend
    username?: string,
    user?: string,  //Current User
    income_amount ?: number,
    income_name?: string,
    income_type? : string,
    income_rate ?: string,
    income_notes ?: string,
    income_datetime?: string,
}


function IncomeCreate(){
    const token = localStorage.getItem('access_token');
    const url = useContext(APIContext);
    const [createform, setCreateForm] = useState({
        income_amount : 0,
        income_name : '',
        income_type : '',
        income_rate : "Weekly",
        income_notes : '',
    });

    const handleChange = (event : any) => {
      const { name, value } = event.target; // Destructure name and value from the event target
      setCreateForm(prevFormData => ({
        ...prevFormData, // Spread the previous state to maintain other field values
        [name]: value,   // Update the specific field using its name as a dynamic key
      }));
    };

    function incomePost(formData : any){
        formData.preventDefault();
        axios.post(url + 'income/create',{
                income_amount : createform.income_amount,
                income_name : createform.income_name,
                income_type: createform.income_type,
                income_rate : createform.income_rate,
                income_notes : createform.income_notes,
            },
            {headers: { Authorization: `Bearer ${token}` }
        })
        .then(function(response){
            console.log('Response:', response.data);
            if (!window.confirm('Entry Added')) return;
        })
        .catch(function(response){
            console.log("Failed To Create");
        })
    };

    return(
        <div>
            <Navigation />
            <div className="mainContent"> 
            <BudgetNavigation />
             <form className = "crudForm" onSubmit={incomePost}>
                <label>
                Name
                <input
                    type="text"
                    name="income_name"
                    value={createform.income_name}
                    onChange={handleChange}
                />
                </label>
                <label>
                Amount
                <input
                    type="number"
                    name="income_amount"
                    value={createform.income_amount}
                    onChange={handleChange}
                />
                </label>
                <label>
                Type
                    <input type="text" 
                    name="Income_type" 
                    value={createform.income_type} 
                    onChange={handleChange}>
                    </input>
                </label>
                <label>
                Notes
                <input
                    type="text"
                    name="income_notes"
                    value={createform.income_notes}
                    onChange={handleChange}
                />
                </label>
                <label>
                Rate
                    <select name="income_rate" value={createform.income_rate} onChange={handleChange}>
                        <option value="Weekly">Weekly</option>
                        <option value="Monthly">Monthly</option>
                        <option value="Annually">Annually</option>
                    </select>
                </label>
                <button className = "crudFormSubmitButton" type="submit">Submit</button>
           </form>
           </div>
        </div>
    );

}

export default IncomeCreate;